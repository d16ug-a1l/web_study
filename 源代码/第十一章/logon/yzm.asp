<% 
Call CreateBMPValidCode ("BMPValidCode",5,6)
Sub CreateBMPValidCode(pSN,nNum,nOdd)
Response.Expires = -9999 
Response.AddHeader "Pragma","no-cache"  
Response.AddHeader "cache-ctrol","no-cache" 
Response.ContentType = "Image/BMP"  
Randomize  
Dim i, ii, iii   
Const cAmount = 36 ' 文字数量    
Const cCode = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"  
' 设置颜色
Dim vColorData(2)   
vColorData(0) = ChrB(100) & ChrB(100) & ChrB(100)  ' 0的位置颜色 
vColorData(1) = ChrB(100) & ChrB(255) & ChrB(255)  ' 1的位置颜色
dim nPicSize,nPicWid,nPicHei,bEven
nPicWid=10
nPicHei=10
' 如果偶数个验证码，BMP文件大小为图像数据加上文件头数据大小（一般为54个字节）
' 如果奇数个验证码，BMP文件大小除了图像数据和文件头数据大小（一般为54个字节）之外，
' 还需加上每行凑的两个像素，共有10*2个像素
If nNum mod 2 =0 Then
	bEvent=1
	nPicSize=nPicHei*nPicWid*nNum*3+54
Else
	bEvent=0
	nPicSize=nPicHei*nPicWid*nNum*3+54+2*nPicHei
End If
' 随机产生字符
Dim vCode(10), vCodes  
  For i = 0 To nNum-1    
   vCode(i) = Int(Rnd * cAmount)   
     vCodes = vCodes & Mid(vCode, vCode(i) + 1, 1)   
Next   
Session(pSN) = vCodes '记录入Session  
'字符的点阵数据 
Dim strData(36)    
   
   
strData(0) = "1110000111110111101111011110111101001011110100101111010010111101001011110111101111011110111110000111"    
strData(1) = "1111011111110001111111110111111111011111111101111111110111111111011111111101111111110111111100000111"  
strData(2) = "1110000111110111101111011110111111111011111111011111111011111111011111111011111111011110111100000011"  
strrData(3) = "1110000111110111101111011110111111110111111100111111111101111111111011110111101111011110111110000111"   
strData(4) = "1111101111111110111111110011111110101111110110111111011011111100000011111110111111111011111111000011"   
strData(5) = "1100000011110111111111011111111101000111110011101111111110111111111011110111101111011110111110000111"  
strData(6) = "1111000111111011101111011111111101111111110100011111001110111101111011110111101111011110111110000111"   
strData(7) = "1100000011110111011111011101111111101111111110111111110111111111011111111101111111110111111111011111"  
strData(8) = "1110000111110111101111011110111101111011111000011111101101111101111011110111101111011110111110000111"  
strData(9) = "1110001111110111011111011110111101111011110111001111100010111111111011111111101111011101111110001111"   
strData(10) = "1111011111111101111111101011111110101111111010111111101011111100000111110111011111011101111000100011"  
strData(11) = "1000000111110111101111011110111101110111110000111111011101111101111011110111101111011110111000000111"   
strData(12) = "1110000011110111101110111110111011111111101111111110111111111011111111101111101111011101111110001111"  
strData(13) = "1000001111110111011111011110111101111011110111101111011110111101111011110111101111011101111000001111"  
strData(14) = "1000000111110111101111011011111101101111110000111111011011111101101111110111111111011110111000000111"  
  strData(15) = "1000000111110111101111011011111101101111110000111111011011111101101111110111111111011111111000111111"  
  strData(16) = "1110000111110111011110111101111011111111101111111110111111111011100011101111011111011101111110001111" 
   strData(17) = "1000100011110111011111011101111101110111110000011111011101111101110111110111011111011101111000100011" 
   strData(18) = "1100000111111101111111110111111111011111111101111111110111111111011111111101111111110111111100000111"  
  strData(19) = "1110000011111110111111111011111111101111111110111111111011111111101111111110111110111011111000011111"  
  strData(20) = "1000100011110111011111011011111101011111110001111111010111111101101111110110111111011101111000100011"  
  strData(21) = "1000111111110111111111011111111101111111110111111111011111111101111111110111111111011110111000000011"  
  strData(22) = "1000100011110010011111001001111100100111110101011111010101111101010111110101011111010101111001010011"  
  strData(23) = "1000100011110011011111001101111101010111110101011111010101111101100111110110011111011001111000110111" 
   strData(24) = "1110001111110111011110111110111011111011101111101110111110111011111011101111101111011101111110001111"   
strData(25) = "1000000111110111101111011110111101111011110000011111011111111101111111110111111111011111111000111111" 
strData(26) = "1110001111110111011110111110111011111011101111101110111110111011111011101001101111011001111110001011"  
strData(27) = "1000001111110111011111011101111101110111110000111111010111111101101111110110111111011101111000110011"  
strData(28) = "1110000011110111101111011110111101111111111001111111111001111111111011110111101111011110111100000111" 
strData(29) = "1000000011101101101111110111111111011111111101111111110111111111011111111101111111110111111110001111"   
strData(30) = "1000100011110111011111011101111101110111110111011111011101111101110111110111011111011101111110001111"  
strData(31) = "1000100011110111011111011101111101110111111010111111101011111110101111111010111111110111111111011111"  
strData(32) = "1001010011110101011111010101111101010111110101011111001001111110101111111010111111101011111110101111"  
strData(33) = "1000100011110111011111101011111110101111111101111111110111111110101111111010111111011101111000100011"  
strData(34) = "1000100011110111011111011101111110101111111010111111110111111111011111111101111111110111111110001111"  
  strData(35) = "1100000011110111011111111101111111101111111110111111110111111111011111111011111111101110111100000011"   
Dim nSize
nSize=nPicSize-(int(nPicSize / 256))*256
Dim n, nTotalWid
n=int(nPicSize / 256)
nTotalWid =nPicWid*nNum
'输出图像文件头
'设置文件类型
Response.BinaryWrite ChrB(Asc("B")) & ChrB(Asc("M")) 
' 设置文件大小
Response.BinaryWrite ChrB(nSize) & ChrB(n) 
Response.BinaryWrite ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) &ChrB(0) &_
                  ChrB(0) & ChrB(54) & ChrB(0) & ChrB(0) & ChrB(0) & _
ChrB(40) & ChrB(0) &ChrB(0) & ChrB(0) 
'设置 图像宽度
Response.BinaryWrite ChrB(nTotalWid) & ChrB(0) & ChrB(0) & ChrB(0) 
'设置 图像高度
Response.BinaryWrite ChrB(nPicHei) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(1) & ChrB(0)
Dim l, ll
l=nPicSize-(int((nPicSize-54) / 256))*256-54
ll=int((nPicSize-54) / 256)
' 输出图像信息头
Response.BinaryWrite ChrB(24) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) 
' 设置图像数据大小
Response.BinaryWrite ChrB(l) & ChrB(ll) 
Response.BinaryWrite ChrB(0) & ChrB(0) & ChrB(18) & ChrB(11) & ChrB(0) & ChrB(0) &_
ChrB(18) & ChrB(11) &ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) &_
ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) &ChrB(0) & ChrB(0)  
' 处理所有行
For i = 9 To 0 Step -1
' 处理所有
  For ii = 0 To nNum-1 
' 处理所有像素
      For iii = 1 To 10 
 '输出图像数据       
' 随机生成杂点     
      If Rnd * 99 + 1 < nOdd Then     
             Response.BinaryWrite vColorData(0)         
       Else                    
	     Response.BinaryWrite vColorData(Mid(strData(vCode(ii)), i * 10 + iii, 1))                
	   End If       
     Next      
  Next  
'如果是奇数个验证码，每行加上两个像素以对齐字节
  If bEvent=0 Then
   Response.BinaryWrite ChrB(0) & ChrB(0)
  End If
Next  
End Sub
%>
  
